defaults:
  - model: hifigan_paper
  - writer: wandb_hifigan_paper
  - metrics: tts
  - datasets: hifigan_paper
  - transforms: empty
  - dataloader: train
  - loss_function: hifigan_paper
  - _self_
gen_optimizer:
  _target_: torch.optim.AdamW
  betas: [0.8, 0.99]
  lr: 2e-4
gen_lr_scheduler:
  _target_: torch.optim.lr_scheduler.ExponentialLR
  gamma: 0.999
disc_optimizer:
  _target_: torch.optim.AdamW
  betas: [0.8, 0.99]
  lr: 2e-4
disc_lr_scheduler:
  _target_: torch.optim.lr_scheduler.ExponentialLR
  gamma: 0.999

mel_extractor: # do not need this, just for comp
  _target_: src.utils.MelSpectrogram
  config:
    _target_: src.utils.MelSpectrogramConfig
    sr: 22050
    win_length: 1024
    hop_length: 256
    n_fft: 1024
    f_min: 0
    f_max: 8000
    n_mels: 80
    power: 1.0
    pad_value: -11.5129251

trainer:
  log_step: 50
  n_epochs: 1000
  epoch_len: null
  device_tensors: ["audio", "mel", "mel_for_loss"] # which tensors should be on device (ex. GPU)
  resume_from: null # null or path to the checkpoint dir with *.pth and config.yaml
  device: auto # device name or "auto"
  override: False # if True, will override the previous run with the same name
  monitor: "max val_STOI" # "off" or "max/min metric_name", i.e. our goal is to maximize/minimize metric
  save_period: 5 # checkpoint each save_period epochs in addition to the best epoch
  early_stop: ${trainer.n_epochs} # epochs for early stopping
  save_dir: "saved"
  seed: 42
  max_grad_norm: null
